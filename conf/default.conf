# Important differences to nginx
# multiple same location contexts allowed, of those with the longest prefix match, the first one is chosen
# return only in location context
# different string handling
# only ipv4
# only one listen and server_name directive per server
# location contexts can't be nested
# "multi"-directives accumulate, like index

# Test 0 - Directives in the http context
index webserv-index.html;

# Test Server 1 - default addr, default port
## listening tests
# curl 0:8000
# curl 0.0.0.0:8000
# curl 127.0.0.1:8000
# curl 127.1:8000
# curl localhost:8000
# hostname -I | tr ' ' \\n | grep . | xargs -I{} curl {}:8000
## method tests
# curl -X POST 127.0.0.1:8000
# curl -X DELETE 127.0.0.1:8000
# curl -X POSTa 127.0.0.1:8000
## URI tests
# curl 0:8000/
# curl 0:8000/index.html
# curl 0:8000/index.html/
# curl 0:8000/nope
# curl 0:8000/nope/
# curl 0:8000/.
# curl 0:8000/..
# curl 0:8000/...
# curl 0:8000/../
# curl 0:8000/../.
# curl 0:8000/./.
# curl 0:8000/././
# curl 0:8000/./..
# curl 0:8000/./../
# curl 0:8000/././index.html
# curl 0:8000/nonexist/../index.html
# curl 0:8000/../nonexist/../../index.html
# curl 0:8000/%69ndex.html
# curl 0:8000/%69ndex.html
# curl 0:8000/%69ndex%2Ehtml
# curl 0:8000/%2E%2E%2Fnonexist%2F%2e%2e%2F%2E%2e%2F%69ndex.html
# curl 0:8000/%2E%2E%2Fnonexist%2F%2e%2e%2F%2E%2e
server {
}

# Test Server 2 - default addr
server {
	listen 8001;
}

# Test Server 3 - listen any addr
server {
	listen *:8002;
}

# Test Server 4 - listen any addr 2
server {
	listen 0.0.0.0:8003;
}

# Test Server 5 - listen any addr, weird
server {
	listen 0.00.0x0.0:8004;
}

# Test Server 6 - default port
server {
	listen 127.0.0.1;
}

# Test Server 7 - addr and port
server {
	listen 127.0.0.1:8001;
}

# Test Server 8 - addr and port, weird
server {
	listen 2130706433:8002;
}

# Test Server 9 - server_name
server {
	listen 127.0.0.1; # <- duplicate to one of the above
	server_name server9 myserver;
}

# Test Server 10 - root
server {
	listen 127.0.0.1:8001;
	server_name server10 simple_root;
	root ./html/server10;
}

# Test Server 11 - error_pages
server {
	listen 127.0.0.1:8002;
	server_name server11 error_pages;
	root ./html/server11;
	error_page 403 /custom403.html;
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
}

# Test Server 12 - location + root + file permissions
server {
	listen 127.0.0.1:8003;
	server_name server12 location root file_perms;
	root ./html/server12;
	error_page 403 /custom403.html;
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
	location /foo {
		root ./html/sandbox;
	}
	location /foo/ {
		root ./html/sandbox;
	}
	location /bar {
		root ./html/sandbox/;
	}
	location /bar/ {
		root ./html/sandbox/;
	}

	location /ffoo {
		root ./html/sandbox/forbidden-index;
	}
	location /ffoo/ {
		root ./html/sandbox/forbidden-index;
	}
	location /fbar {
		root ./html/sandbox/forbidden-index/;
	}
	location /fbar/ {
		root ./html/sandbox/forbidden-index/;
	}

	location /baz {
		index forbidden-index.html;
		root ./html/forbidden;
	}
	location /baz/ {
		root ./html/forbidden;
	}
	location /qux {
		root ./html/forbidden/;
	}
	location /qux/ {
		root ./html/forbidden/;
	}
}

# Test Server 13 - location + alias
server {
	listen 127.0.0.1:8004;
	server_name server13 alias;
	root ./html;
	error_page 403 /custom403.html;
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
	location /foo {
		alias /sandbox; # TODO: @all: not working correctly;
	}
	location /foo/ {
		alias /sandbox; # TODO: @all: not working correctly;
	}
	location /bar {
		alias /sandbox/;
	}
	location /bar/ {
		alias /sandbox/;
	}
}

# Test Server 14 - location + return
server {
	listen 127.0.0.1:8005;
	server_name server14 return_str return_http;
	root ./html/server14;
	error_page 403 /custom403.html; # custom403.html doesn't exist -> default error response will be generated and sent
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
	location /foo {
		return 200 "/foo\n";
	}
	location /foo/ {
		return 200 "/foo/\n";
	}
	location /bar {
		return 301 https://www.google.com/;
	}
	location /bar/ {
		return 301 http://42berlin.de;
	}
}

# Test Server 15 - location + limit_except/allowed methods
server {
	listen 127.0.0.1:8006;
	server_name server15 limit_except allowed_methods;
	root ./html/server15;
	error_page 403 /custom403.html;
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
	location /foo {
		limit_except GET;
	}
	location /foo/ {
		limit_except POST;
	}
	location /bar {
		limit_except DELETE;
	}
	location /bar/ {
		limit_except GET POST;
	}
}

# Test Server 16 - location + autoindex
server {
	listen 127.0.0.1:8007;
	server_name server16 autoindex;
	root ./html/server16;
	error_page 403 /custom403.html;
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
	location /foo {
		autoindex on; # TODO: @all: broken
	}
	location /foo/ {
		autoindex false;
	}
	location /bar {
		autoindex yes;
	}
}

# Test Server 17 - location + POST Upload + body size
server {
	listen 127.0.0.1:8008;
	server_name server17 file_upload;
	root ./html/server17;
	error_page 403 /custom403.html;
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
	location /foo { # TODO: @all: in  general, GET /foo with curl -L fails
		upload_dir /uploads;
	}
	location /bar {
		upload_dir /;
	}
	location /baz { # TODO: @all: in  general, GET /foo with curl -L fails
		client_max_body_size 1;
		upload_dir /uploads;
	}
	location /qux {
		client_max_body_size 1k;
		upload_dir /;
	}
}

# Test Server 18 - location + CGI + body size
server {
	listen 127.0.0.1:8009;
	server_name server18 cgi;
	root ./html/server18;
	error_page 403 /custom403.html;
	error_page 404 /custom404.html;
	error_page 500 501 /custom50x.html;
	location /foo {
		cgi_ext .py /usr/bin/python3;
		cgi_ext .pl /usr/bin/perl;
		cgi_ext .sh /usr/bin/bash;
		cgi_dir /foo/cgi-bin;
	}
	location /bar {
		cgi_ext .cgi; # no second arg means it should be executed via argv[0]
		cgi_ext .py; # no second arg means it should be executed via argv[0]
		cgi_dir /;
	}
	location /baz {
		limit_except POST;
		client_max_body_size 10;
		cgi_ext .py /usr/bin/python3;
		cgi_ext .pl /usr/bin/perl;
		cgi_dir /cgi-bin;
	}
	location /qux {
		limit_except POST;
		client_max_body_size 1k;
		cgi_ext .cgi;
		cgi_dir /;
	}
}

# Test Server 19 - playground, eval
server {
	listen 127.0.0.1:8010;
	server_name server19 eval;
	upload_dir /;
}
